#!/bin/sh
IFS=""
operand(){
  printf '%s: missing operand' "${0##*/}"
  [ ! "$2" -a "$1" ] && { printf " after '%s'\n" "$1"
    printf 'Two strings must be given when translating.'
  }
  echo; exit 1
} # simulate coreutils tr

[ ! "$1" -o ! "$2" ] && { operand "$@" ;} 
# this will be removed in the future for -d

##
new_line="
"
[ "$1" = '\n' ] && r1=$new_line || r1=$(printf '%s' "${1}")
[ "$2" = '\n' ] && r2=$new_line || r2=$(printf '%s' "${2}")
is_newline=1
if [ "$1" = '\n' ]; then
	while read -r line || { is_newline=0 ; [ -n "$line" ];}; do
		printf '%s' "$line"
  		[ $is_newline -eq 1 ] &&  printf '%s' "$r2"
	done <&0
fi
## \n handling

while read -r line || { is_newline=0 ; [ -n "$line" ];}; do
  while [ -n "$line" ]; do
    next=${line#?}
	char=$(printf '%.1s' "$line")
    case $char in
      "${r1}") printf '%s' "$r2" ;;
      *) printf '%s' "$char" ;;
    esac
    line=$next
  done
  [ $is_newline -eq 1 ] && printf '\n'
done <&0

# some the above is from pystartdust! thanks a ton! ^^