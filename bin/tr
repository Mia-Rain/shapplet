#!/bin/sh
# shellcheck disable=SC2015,SC2059,SC2048
IFS=""
operand(){
  printf '%s: missing operand' "${0##*/}"
  [ ! "$2" -a "$1" ] && { printf " after '%s'\n" "$1"
    printf 'Two strings must be given when translating.'
  }
  echo; exit 1
} # handle missing args
in=$(while IFS=""; read -r p || [ -n "$p" ]; do
  printf '%s\n' "$p"
done <&0)

# IFS=""
# set -- "$in"
# for i in $*; do # $* is intended
#   [ ! "$out" ] && { out="$i";:;} || { out="$out$d$i";}
# done
## this system is REQUIRED for escape replacement, but is unstable

[ ! "$1" -o ! "$2" ] && { operand "$@" ;}
while [ -n "$in" ]; do
    next=${in#?}
    case "${in%$next}" in
      "${1}")
        printf '%s' "${2}"
      ;;
      *)
        printf '%s' "${in%$next}"
    esac
    in="$next"
done
# this always works but cannot match escapes

printf '%s\n' "$out"
